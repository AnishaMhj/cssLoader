@import url('https://fonts.googleapis.com/css2?family=Sarpanch&display=swap');

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    min-height: 100vh;
    // display: flex;
    justify-content: center;
    align-items: center;
    background: #001122;
}

.svg-frame {
    position: relative;
    width: 300px;
    height: 300px;
    transform-style: preserve-3d;
    display: flex;
    justify-content: center;
    align-items: center;
}

.svg-frame svg {
    position: absolute;
    transition: .5s;
    z-index: calc(1 - (0.2 * var(--j)));
    transform-origin: center;
    width: 344px;
    height: 344px;
    fill: none;
}

.svg-frame:hover svg {
    transform: rotate(-80deg) skew(30deg) translateX(calc(45px * var(--i))) translateY(calc(-35px * var(--i)));
}

.svg-frame svg #center {
    transition: .5s;
    transform-origin: center;
}

.svg-frame:hover svg #center {
    transform: rotate(-30deg) translateX(45px) translateY(-3px);
}

#out2 {
    animation: rotate1 7s ease-in-out infinite alternate;
    transform-origin: center;
}

@keyframes rotate1 {
    to {
        transform: rotate(360deg);
    }
}

#out3 {
    animation: rotate1 3s ease-in-out infinite alternate;
    transform-origin: center;
    stroke: #ff0;
}

@keyframes rotate1 {
    to {
        transform: rotate(360deg);
    }
}

#inner3,
#inner1 {
    animation: rotate1 4s ease-in-out infinite alternate;
    transform-origin: center;
}

@keyframes rotate1 {
    to {
        transform: rotate(360deg);
    }
}

#center1 {
		fill: #ff0;
    animation: rotate1 2s ease-in-out infinite alternate;
    transform-origin: center;
}

@keyframes rotate1 {
    to {
        transform: rotate(360deg);
    }
}

p {
    position: absolute;
    color: #00ffff40;
    top: -80px;
    font-family: 'Sarpanch', sans-serif;
	font-size: 1.2rem;
}

//learning through simple animations

/* simpleAnimation CSS
=================================== */
h1{
    color: #fff;
    padding: 20px;
}

.animateHere{
    width: 100px;
    height: 100px;
    position: relative;
    background-color: #006466;
    animation-name: changeColor;
    animation-duration: 4s;     //if not specified will not work coz default value is 0s
    // animation-delay: 2s; //specifies delay for the start of animation
    animation-iteration-count: infinite; //loop
    animation-timing-function: ease-in-out; // speed curve of an animation
}

@keyframes changeColor{
    //specifies when to change the style using from and to
    //can also be represented by 0% - start and 100% - complete
    0%{
        background-color: #006466;
        left: 0px; top: 0px;
    }
    25%{
        background-color: #1b3a4b;
        left: 200px; top: 0px;
    }
    50%{
        background-color: #272640;
        left: 200px; top: 200px;
    }
    75%{
        background-color: #3e1f47;
        left: 0px; top: 200px;
    }
    100%{
        background-color: #4d194d;
        left: 0px; top: 0px;
    }
    
}

/* loader CSS
=================================== */
.loader{
    width: 120px;
    height: 120px;
    border: solid 5px #272640;
    border-top:solid 5px #006466;
    border-radius: 50%;
    animation-name: spin;
    animation-duration: 2s; 
    animation-iteration-count: infinite;
    animation-timing-function: linear; 
    //in short cut
    //-webkit-animation: spin 2s linear infinite; /* Safari */
//   animation: spin 2s linear infinite;
}

//css transform property applies a 2D or 3D transformation to an element 
//allows to rotate, scale, move, skew, etc., elements
/* Safari */
@-webkit-keyframes spin {
    0% { -webkit-transform: rotate(0deg); }
    100% { -webkit-transform: rotate(360deg); }
  }
  
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }